        -:    0:Source:C:/Users/maria/Desktop/Taller/Algoritmos I/TPImplementacion/tests/EJ03_densidadPoblacionTEST.cpp
        -:    0:Graph:C:\Users\maria\Desktop\Taller\Algoritmos I\TPImplementacion\cmake-build-debug\CMakeFiles\juegoDeLaVida.dir\tests\EJ03_densidadPoblacionTEST.gcno
        -:    0:Data:C:\Users\maria\Desktop\Taller\Algoritmos I\TPImplementacion\cmake-build-debug\CMakeFiles\juegoDeLaVida.dir\tests\EJ03_densidadPoblacionTEST.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "gtest/gtest.h"
        -:    3:
        -:    4:using namespace std;
        -:    5:
        8:    6:TEST(densidadPoblacionTEST, toroideDiagonal){
        1:    6-block  0
        1:    6-block  1
        1:    6-block  2
    %%%%%:    6-block  3
    %%%%%:    6-block  4
    %%%%%:    6-block  5
        1:    6-block  6
        1:    6-block  7
        1:    6-block  8
        1:    6-block  9
        1:    6-block 10
        1:    6-block 11
        1:    6-block 12
        2:    7:    vector<bool> a = { true, true, true, true };
        1:    7-block  0
        1:    7-block  1
    %%%%%:    7-block  2
    %%%%%:    7-block  3
        7:    8:    toroide t = { a, a, a, a, a };
        1:    8-block  0
        1:    8-block  1
        1:    8-block  2
        1:    8-block  3
        1:    8-block  4
        1:    8-block  5
        6:    8-block  6
        5:    8-block  7
    %%%%%:    8-block  8
    %%%%%:    8-block  9
    %%%%%:    8-block 10
    %%%%%:    8-block 11
    %%%%%:    8-block 12
        1:    9:    EXPECT_NEAR(densidadPoblacion(t), 1.0, 0.01);
        1:    9-block  0
        1:    9-block  1
        1:    9-block  2
    $$$$$:    9-block  3
    $$$$$:    9-block  4
    $$$$$:    9-block  5
    $$$$$:    9-block  6
    $$$$$:    9-block  7
        1:    9-block  8
    %%%%%:    9-block  9
    %%%%%:    9-block 10
    %%%%%:    9-block 11
    %%%%%:    9-block 12
        1:   10:}
    %%%%%:   10-block  0
        -:   11:
        8:   12:TEST(densidadPoblacionTEST, toroideSinDensidad){
        1:   12-block  0
        1:   12-block  1
        1:   12-block  2
    %%%%%:   12-block  3
    %%%%%:   12-block  4
    %%%%%:   12-block  5
        1:   12-block  6
        1:   12-block  7
        1:   12-block  8
        1:   12-block  9
        1:   12-block 10
        1:   12-block 11
        1:   12-block 12
        2:   13:    vector<bool> a = { false, false, false, false };
        1:   13-block  0
        1:   13-block  1
    %%%%%:   13-block  2
    %%%%%:   13-block  3
        8:   14:    toroide t = { a, a, a, a, a, a };
        1:   14-block  0
        1:   14-block  1
        1:   14-block  2
        1:   14-block  3
        1:   14-block  4
        1:   14-block  5
        1:   14-block  6
        7:   14-block  7
        6:   14-block  8
    %%%%%:   14-block  9
    %%%%%:   14-block 10
    %%%%%:   14-block 11
    %%%%%:   14-block 12
    %%%%%:   14-block 13
        1:   15:    EXPECT_EQ(densidadPoblacion(t), 0);
        1:   15-block  0
        1:   15-block  1
        1:   15-block  2
    $$$$$:   15-block  3
    $$$$$:   15-block  4
    $$$$$:   15-block  5
    $$$$$:   15-block  6
    $$$$$:   15-block  7
        1:   15-block  8
    %%%%%:   15-block  9
    %%%%%:   15-block 10
    %%%%%:   15-block 11
    %%%%%:   15-block 12
    %%%%%:   15-block 13
    %%%%%:   15-block 14
        1:   16:}
    %%%%%:   16-block  0
        -:   17:
        8:   18:TEST (densidadPoblacionTEST, mediaDensidad){
        1:   18-block  0
        1:   18-block  1
        1:   18-block  2
    %%%%%:   18-block  3
    %%%%%:   18-block  4
    %%%%%:   18-block  5
        1:   18-block  6
        1:   18-block  7
        1:   18-block  8
        1:   18-block  9
        1:   18-block 10
        1:   18-block 11
        1:   18-block 12
        -:   19:    toroide t= { {true, false, true, false},
        -:   20:                 {true, false, true, false},
        -:   21:                 {true, false, true, false},
        6:   22:                 {true, false, true, false}};
        1:   22-block  0
        1:   22-block  1
        1:   22-block  2
        1:   22-block  3
        1:   22-block  4
        1:   22-block  5
        5:   22-block  6
        4:   22-block  7
        1:   22-block  8
    %%%%%:   22-block  9
    %%%%%:   22-block 10
    %%%%%:   22-block 11
    %%%%%:   22-block 12
    %%%%%:   22-block 13
    %%%%%:   22-block 14
    %%%%%:   22-block 15
    %%%%%:   22-block 16
    %%%%%:   22-block 17
        1:   23:    EXPECT_EQ(densidadPoblacion(t), 0.5);
        1:   23-block  0
        1:   23-block  1
    $$$$$:   23-block  2
    $$$$$:   23-block  3
    $$$$$:   23-block  4
    $$$$$:   23-block  5
    $$$$$:   23-block  6
        1:   23-block  7
    %%%%%:   23-block  8
    %%%%%:   23-block  9
    %%%%%:   23-block 10
    %%%%%:   23-block 11
    %%%%%:   23-block 12
    %%%%%:   23-block 13
        1:   24:}
    %%%%%:   24-block  0
        -:   25:
        8:   26:TEST (densidadPoblacionTEST, unNovenoDensidad){
        1:   26-block  0
        1:   26-block  1
        1:   26-block  2
    %%%%%:   26-block  3
    %%%%%:   26-block  4
    %%%%%:   26-block  5
        1:   26-block  6
        1:   26-block  7
        1:   26-block  8
        1:   26-block  9
        1:   26-block 10
        1:   26-block 11
        1:   26-block 12
        -:   27:    toroide t= { {true, false, false},
        -:   28:                 {false, false, false},
        5:   29:                 {false, false, false}};
        1:   29-block  0
        1:   29-block  1
        1:   29-block  2
        1:   29-block  3
        1:   29-block  4
        4:   29-block  5
        3:   29-block  6
        1:   29-block  7
    %%%%%:   29-block  8
    %%%%%:   29-block  9
    %%%%%:   29-block 10
    %%%%%:   29-block 11
    %%%%%:   29-block 12
    %%%%%:   29-block 13
    %%%%%:   29-block 14
    %%%%%:   29-block 15
        1:   30:    EXPECT_NEAR(densidadPoblacion(t), 1.0/9, 0.01);
        1:   30-block  0
        1:   30-block  1
    $$$$$:   30-block  2
    $$$$$:   30-block  3
    $$$$$:   30-block  4
    $$$$$:   30-block  5
    $$$$$:   30-block  6
        1:   30-block  7
    %%%%%:   30-block  8
    %%%%%:   30-block  9
    %%%%%:   30-block 10
    %%%%%:   30-block 11
        5:   31:}
        1:   31-block  0
        1:   31-block  1
        1:   31-block  2
        1:   31-block  3
        1:   31-block  4
        1:   31-block  5
    %%%%%:   31-block  6
